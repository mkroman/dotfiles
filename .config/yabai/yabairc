#!/usr/bin/env sh

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# bar settings
yabai -m config top_padding 0

# global settings
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          autofocus

yabai -m config window_placement             second_child
yabai -m config window_topmost               off

yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config window_shadow                off

yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off

# Mouse support
yabai -m config mouse_modifier               alt
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize

# general space settings
yabai -m config layout                       bsp
yabai -m config bottom_padding               0
yabai -m config left_padding                 0
yabai -m config right_padding                0
yabai -m config window_gap                   0

# float system preferences
yabai -m rule --add app='^System Information$' manage=off
yabai -m rule --add app='^System Settings$' manage=off
# yabai -m rule --add title='Preferences$' manage=off

yabai -m rule --add app='^1Password$' manage=off

#yabai -m rule --add app="^Firefox$" space=2
# yabai -m rule --add app="^Spotify$" space=5

# float settings windows
yabai -m rule --add title='Settings$' manage=off

yabai -m rule --add app='^Archive Utility$' manage=off

# Float discord updater splash screen
yabai -m rule --add app='^Discord$' title='^Discord Updater$' manage=off

# yabai -m signal --add event=space_changed action="~/.config/yabai/maintain_paired_spaces.sh"

left_display_idx="$(yabai -m query --displays | jq -r '.[] | select(.uuid == "6276F7F3-38A8-4F14-95D4-97F7EA1452AD") | .index')"
center_display_idx="$(yabai -m query --displays | jq -r '.[] | select(.uuid == "DE5C71B3-BA81-49EA-B77F-3242BF7C70CA") | .index')"
right_display_idx="$(yabai -m query --displays | jq -r '.[] | select(.uuid == "37D8832A-2D66-02CA-B9F7-8F30A301B230") | .index')"

function setup_space {
  local idx="$1"
  local name="$2"
  local space=
  echo "setup space $idx : $name"

  space="$(yabai -m query --spaces --space "$idx")"

  if [ -z "$space" ]; then
    yabai -m space --create
  fi

  if [ "${name}" = "chat" ]; then
    yabai -m space "$idx" --label "$name" --display "${left_display_idx}"
  elif [ "${name}" = "web" ]; then
    yabai -m space "$idx" --label "$name" --display "${center_display_idx}"
  elif [ "${name}" = "code" ]; then
    yabai -m space "$idx" --label "$name" --display "${center_display_idx}"
  elif [ "${name}" = "docs" ]; then
    yabai -m space "$idx" --label "$name" --display "${right_display_idx}"
  elif [ "${name}" = "media" ]; then
    yabai -m space "$idx" --label "$name" --display "${right_display_idx}"
  elif [ "${name}" = "other" ]; then
    yabai -m space "$idx" --label "$name" --display "${right_display_idx}"
  else
    yabai -m space "$idx" --label "$name"
  fi
}

echo "left display index: ${left_display_idx}"

setup_space 1 main
setup_space 2 web
setup_space 3 code
setup_space 4 docs
setup_space 5 media
setup_space 6 other
setup_space 7 chat

echo "yabai configuration loaded.."
